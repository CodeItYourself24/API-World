
>> REST::
	REpresentational State Transfer

	- it is beneficial due to stateless nature

	The request sent by the client consists of all the data needed by a server to fulfill the request.

	it has features like:
		- serialization
		- authentication policies
		- viewsets for handling HTTP requests


>> What’s the difference between a View, Viewset  & ModelViewSet 

	A view, is a single function that performs a specific action on a model.

	A viewset combines the logic for different kinds of views into a single class.

		(is a class that provides a set of actions that can be performed on a model.)

		benefits >> reducing redundancy and enhancing code reusability.

		- they handle multiple HTTP methods(get,put,post,delete) through action routing which maps HTTP methods to actions performed on data.
	

	A ModelViewSet is a special type of ViewSet that is automatically generated from a model.

	- This means that it will already have all of the CRUD operations (create, read, update, delete) set up and ready to go.

	A regular ViewSet will not have these operations automatically generated, and you will need to set them up yourself.


>> What are Routers in DRF?

	Routers helps you to automatically generate URLs for a given resource/viewsets. 

	This can be helpful if you have a large number of resources/viewsets and don’t want to have to manually create URLs for each one.

	DRF provides two types of routers:

		a. Simple Router: 	it is a basic router provided by DRF.

				- It automatically generates standard CRUD (Create, Retrieve, Update, Delete) URL patterns for your viewsets.

			should be imported as >>
						from rest_framework import routers
						
						router = routers.SimpleRouter()
						router.register(r'items', ItemViewSet)

		b. DefaultRouter:	 is an enhanced version of SimpleRouter. 

				- It includes the standard CRUD URL patterns provided by SimpleRouter &
					also adds a default route for listing all available viewsets

			imported as >>
					from rest_framework import routers

					router = routers.DefaultRouter()
					router.register(r'items', ItemViewSet)





